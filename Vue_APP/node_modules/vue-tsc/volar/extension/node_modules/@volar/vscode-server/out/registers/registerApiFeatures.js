"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vscode_vue_languageservice_1 = require("@volar/vscode-vue-languageservice");
const node_1 = require("vscode-languageserver/node");
const instances_1 = require("../instances");
instances_1.connection.client.register(node_1.ReferencesRequest.type, instances_1.vueFileReg);
instances_1.connection.client.register(node_1.DefinitionRequest.type, instances_1.vueFileReg);
instances_1.connection.client.register(node_1.CallHierarchyPrepareRequest.type, instances_1.allFilesReg);
instances_1.connection.client.register(node_1.TypeDefinitionRequest.type, instances_1.vueFileReg);
instances_1.connection.client.register(node_1.HoverRequest.type, instances_1.vueFileReg);
instances_1.connection.client.register(node_1.RenameRequest.type, {
    documentSelector: instances_1.vueFileReg.documentSelector,
    prepareProvider: true,
});
instances_1.connection.client.register(node_1.SelectionRangeRequest.type, instances_1.vueFileReg);
instances_1.connection.client.register(node_1.SignatureHelpRequest.type, {
    documentSelector: instances_1.vueFileReg.documentSelector,
    triggerCharacters: ['(', ',', '<'],
    retriggerCharacters: [')'],
});
instances_1.connection.client.register(node_1.ExecuteCommandRequest.type, {
    commands: [
        vscode_vue_languageservice_1.Commands.HTML_TO_PUG,
        vscode_vue_languageservice_1.Commands.PUG_TO_HTML,
        vscode_vue_languageservice_1.Commands.SWITCH_REF_SUGAR,
        vscode_vue_languageservice_1.Commands.SHOW_REFERENCES,
    ]
});
instances_1.connection.client.register(node_1.CompletionRequest.type, {
    documentSelector: instances_1.vueFileReg.documentSelector,
    triggerCharacters: [...vscode_vue_languageservice_1.triggerCharacter.typescript, ...vscode_vue_languageservice_1.triggerCharacter.html],
    resolveProvider: true,
});
//# sourceMappingURL=registerApiFeatures.js.map