"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.activate = void 0;
const vscode = require("vscode");
const shared_1 = require("@volar/shared");
async function activate(context, languageClient) {
    await languageClient.onReady();
    const tokenLegend = await languageClient.sendRequest(shared_1.SemanticTokenLegendRequest.type);
    const onDidChangeSemanticTokensEvent = new vscode.EventEmitter();
    languageClient.onNotification(shared_1.SemanticTokensChangedNotification.type, () => {
        onDidChangeSemanticTokensEvent.fire();
    });
    class RangeSemanticTokensProvider {
        constructor() {
            this.onDidChangeSemanticTokens = onDidChangeSemanticTokensEvent.event;
        }
        async provideDocumentRangeSemanticTokens(document, range, token) {
            const result = await languageClient.sendRequest(shared_1.RangeSemanticTokensRequest.type, {
                textDocument: languageClient.code2ProtocolConverter.asTextDocumentIdentifier(document),
                range: languageClient.code2ProtocolConverter.asRange(range),
            });
            if (!result) {
                return { data: new Uint32Array() };
            }
            return languageClient.protocol2CodeConverter.asSemanticTokens(result);
        }
    }
    context.subscriptions.push(vscode.languages.registerDocumentRangeSemanticTokensProvider([{ scheme: 'file', language: 'vue' }], new RangeSemanticTokensProvider(), tokenLegend));
}
exports.activate = activate;
//# sourceMappingURL=semanticTokens.js.map