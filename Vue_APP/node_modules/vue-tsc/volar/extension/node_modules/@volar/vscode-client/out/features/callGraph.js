"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.activate = void 0;
const vscode = require("vscode");
const shared_1 = require("@volar/shared");
async function activate(context, languageClient) {
    await languageClient.onReady();
    context.subscriptions.push(vscode.commands.registerCommand('volar.action.showCallGraph', async () => {
        var _a;
        const document = (_a = vscode.window.activeTextEditor) === null || _a === void 0 ? void 0 : _a.document;
        if (!document)
            return;
        let param = languageClient.code2ProtocolConverter.asTextDocumentIdentifier(document);
        const d3 = await languageClient.sendRequest(shared_1.D3Request.type, param);
        const panel = vscode.window.createWebviewPanel('vueCallGraph', 'Vue Call Graph', vscode.ViewColumn.One, {
            enableScripts: true
        });
        panel.webview.html = `
<script src="https://d3js.org/d3.v5.min.js"></script>
<script src="https://unpkg.com/viz.js@1.8.1/viz.js" type="javascript/worker"></script>
<script src="https://unpkg.com/d3-graphviz@2.1.0/build/d3-graphviz.min.js"></script>
<div id="graph" style="text-align: center;"></div>
<script>

    var dotIndex = 0;
    var graphviz = d3.select("#graph").graphviz()
        .zoom(false)
        .on("initEnd", render)

    function render() {
        var dot = \`${d3}\`;
        graphviz
            .renderDot(dot)
    }

</script>
`;
    }));
}
exports.activate = activate;
//# sourceMappingURL=callGraph.js.map