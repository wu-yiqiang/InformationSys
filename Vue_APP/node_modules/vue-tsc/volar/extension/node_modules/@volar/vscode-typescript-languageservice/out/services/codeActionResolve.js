"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
const rename_1 = require("./rename");
function register(languageService, getTextDocument) {
    return (codeAction) => {
        const data = codeAction.data;
        if ((data === null || data === void 0 ? void 0 : data.type) === 'fixAll') {
            const fixs = data.fixIds.map(fixId => {
                try {
                    return languageService.getCombinedCodeFix({ type: 'file', fileName: data.fileName }, fixId, {} /* TODO */, {} /* TODO */);
                }
                catch { }
            });
            const changes = fixs.map(fix => { var _a; return (_a = fix === null || fix === void 0 ? void 0 : fix.changes) !== null && _a !== void 0 ? _a : []; }).flat();
            codeAction.edit = rename_1.fileTextChangesToWorkspaceEdit(changes, getTextDocument);
        }
        else if ((data === null || data === void 0 ? void 0 : data.type) === 'refactor') {
            const editInfo = languageService.getEditsForRefactor(data.fileName, {} /* TODO */, data.range, data.refactorName, data.actionName, {} /* TODO */);
            if (editInfo) {
                const edit = rename_1.fileTextChangesToWorkspaceEdit(editInfo.edits, getTextDocument);
                // TODO: renameFilename
                // TODO: renameLocation
                codeAction.edit = edit;
            }
        }
        return codeAction;
    };
}
exports.register = register;
//# sourceMappingURL=codeActionResolve.js.map