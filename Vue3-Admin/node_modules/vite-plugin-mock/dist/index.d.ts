import { Plugin } from 'vite';

interface ViteMockOptions {
    mockPath?: string;
    configPath?: string;
    ignore?: RegExp | ((fileName: string) => boolean);
    watchFiles?: boolean;
    localEnabled?: boolean;
    prodEnabled?: boolean;
    injectFile?: string;
    injectCode?: string;
    supportTs?: boolean;
    logger?: boolean;
}
declare type MethodType = 'get' | 'post' | 'put' | 'delete' | 'patch';
declare interface MockMethod {
    url: string;
    method?: MethodType;
    timeout?: number;
    statusCode?: number;
    response: ((opt: {
        body: Record<string, any>;
        query: Record<string, any>;
    }) => any) | any;
}
interface NodeModuleWithCompile extends NodeModule {
    _compile(code: string, filename: string): any;
}

declare function viteMockServe(opt: ViteMockOptions): Plugin;

export { MethodType, MockMethod, NodeModuleWithCompile, ViteMockOptions, viteMockServe };
