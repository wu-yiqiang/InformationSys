{
  "version": 3,
  "sources": ["../crypto-js/mode-ecb.js", "dep:crypto-js_mode-ecb"],
  "sourcesContent": [";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));", "export default require(\"./node_modules/crypto-js/mode-ecb.js\");"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAC,EAAC,UAAU,MAAM,SAAS,OAAO;AACjC,QAAI,OAAO,YAAY,UAAU;AAEhC,aAAO,UAAU,UAAU,QAAQ,gBAAmB;AAAA,eAE9C,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,aAAO,CAAC,UAAU,kBAAkB;AAAA,WAEhC;AAEJ,cAAQ,KAAK;AAAA;AAAA,KAEb,SAAM,SAAU,UAAU;AAK3B,aAAS,KAAK,MAAO,WAAY;AAC7B,UAAI,MAAM,SAAS,IAAI,gBAAgB;AAEvC,UAAI,YAAY,IAAI,OAAO;AAAA,QACvB,cAAc,SAAU,OAAO,QAAQ;AACnC,eAAK,QAAQ,aAAa,OAAO;AAAA;AAAA;AAIzC,UAAI,YAAY,IAAI,OAAO;AAAA,QACvB,cAAc,SAAU,OAAO,QAAQ;AACnC,eAAK,QAAQ,aAAa,OAAO;AAAA;AAAA;AAIzC,aAAO;AAAA;AAIX,WAAO,SAAS,KAAK;AAAA;AAAA;;;ACrCtB,IAAO,6BAAQ;",
  "names": []
}
